(function(){
	angular.module('home')
    .service('registerSelfService', ['$q' , '$http' , '$log', '$filter' , registerSelfService]);
	
	function registerSelfService($q, $http, $log ,$filter){
		return({
			getUserPOJO : getUserPOJO,
			registerUser : registerUser		
		});
		
		function registerUser(userObj){
			$log.debug("inside registerUser in service");
			var request = $http({
				method:"POST",
				url:"/api/registerUser",
				data:userObj,
				headers : {
	                	'Content-Type' : 'application/json'
	                }				
			});
			return(request.then(handleSuccess, handleError));			
		}
		
		
		function getUserPOJO(){							           
	        return new userPOJOClass();
		};
		
			    
	    function handleSuccess( response ) {
	    	$log.debug("get success resp ============= "+response.data);
            return(response.data );
        }
	    
	    function handleError( response ) {
	    	$log.error("error in fetching data in RegisterSelfService .......")
            if (
                 !angular.isObject( response.data ) ||
                    ! response.data.message
                ){
                return( $q.reject( "An unknown error occurred." ));
            }
            // Otherwise, use expected error message.
            return( $q.reject( response.data.message ) );

        }
	}
	
	function userPOJOClass(){
		//Neo4j Node Name -- User
		this.basicDetails={
		        userName:"",
		        regID:"",
		        salutation:"",
		        firstName:"",
		        middleName:"",
		        lastName:"",
		        userType:'',//number
		        DOB:'',//number timestamp
		        contactUserId:"", //username
		        casteId:'', //number
		        birthPlace_country:'',
		        birthPlace_state:'',
		        birthPlace_city:'',
		        birthPlace_otherCity:'',
		        visaDetails:"",
		        isSMSEnabled:false,
		        isEmailEnabled:false,
		        isFromReservedCategory:false,
		        passportNumber:"",
		        isFromReservedCategory:false,
		        isPhysicallyHandicapped:false,
		        sex:"",
		        softDelete:false,
		        languages_others:"",
		        profileImagePath:"",
		        isEconomicallyBackward:false,
		        languages_motherTongue:"",
		        uid:"",
		        religionId:'', //number
		        panNum:"",
		        isTrialStartDt:'',
		        isTrialEndDt:'',
		        startDate:'',
		        endDate:'',
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id:'' //id generated by neo4j is number
		    }
			//Neo4j Node Name -- UserSecProfile
			this.userSecProfile = {
				username : "",
				resetPasswordCodeUntil:'',//number timestamp
				resetPasswordCode:"",
				accessList:"", //array of accessList strings
				hashPassword:"",
				hashLastPassword1:"",
				hashLastPassword2:"",
				hashLastPassword3:"",
				lastLoginDate:"",
				lastPwdChangeDate:"",
				failedAttempt : "",
				securityQues1:"",
				securityAns1:"",
				securityQues2:"",
				securityAns2:"",
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
			}
			// Neo4j Node Name -- Address
		    this.primaryAddress={
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        addrType : 'PRIMARY',
		        addrSeq : 0,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		    }
			// Neo4j Node Name -- Address
		    this.secondaryAddress={
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        addrType : 'SECONDARY',
		        addrSeq : 1,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		    }
			// Neo4j Node Name -- SocialNetwork
		    this.socialNetwork={
		        skypeId: '',
		        facebookId: '',
		        twitterUrl: '',
		        skypeUrl: '',
		        twitterId: '',
		        facebookScreenName: '',
		        facebookUrl: '',
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
		        _id: ''
		    }
			// Neo4j Node Name -- Contact
		    this.contact={
				 emailPrimary:'',
		    	 emailSecondary:'',
		    	 phonePrimary:'',
		    	 phoneSecondary:'',
				 createdBy:"", //username
				 createdAt:(new Date()).getTime(),
				 updatedBy:"", //username
				 updatedAt:"",
		    	_id:''
		    }
			// Neo4j Node Name -- ImageData
			this.imageData = {
				imagePath : '',
				createdBy:"", //username'
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id : ''
				};
		}
	
		       

	
})();