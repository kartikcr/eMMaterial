(function(){
	angular.module('home')
    .service('homeService', ['$q' , '$http' , '$log', '$filter' , HomeService]);
	
	function HomeService($q, $http, $log ,$filter){
		return({
			getAllState : getAllState,
			getBoardsFromStateId : getBoardsFromStateId,
			getLangFromStateId : getLangFromStateId,
			schoolSearchData : schoolSearchData,
			getAllSchoolName : getAllSchoolName,
			getSchoolPOJO : getSchoolPOJO,
			getUserPOJO : getUserPOJO,
			getHomeLandingData:getHomeLandingData
		});
		
		function schoolSearchData(searchData){
			$log.debug("inside schoolSearchData in service "+searchData);
			
			var request = $http({
				method:"POST",
				url:"/api/findSchool",
				data:searchData,
				headers : {
	                   'Content-Type' : 'application/json'
	            }
			});
			return(request.then( handleSuccess, handleError ));
			//return searchData;
		};
		
		/*function getAllSchoolName(){
			$log.debug("inside getAllSchoolName in service ");
			
			var request = $http({
				method:"POST",
				url:"/api/getSchoolName",
			});
			return(request.then( handleSuccess, handleError ));
		//	return school;
		};*/
		
		function getAllSchoolName(){
			$log.debug("inside getAllSchoolName in service ");
			
			var request = $http({
				method:"GET",
				url:"/api/schools/list",
			});
			return(request.then( handleSuccess, handleError ));
		//	return school;
		};
		
		function getSchoolPOJO(){
			//$log.debug("inside getSchoolPOJO : "+data);
							           
	        return new schoolClass();
		};
		
		function getUserPOJO(){							           
	        return new userPOJOClass();
		};
		
		function getHomeLandingData(){
			//$log.debug("inside findAllState : "+data);
			//call to back end
			 var request = $http({
	                method: "GET",
	                url: "/api/landing-data"
	            });
	         return(request.then( handleSuccess, handleError ));            
	           
	      //  return city;
		};
		
		function getAllState(){
			//$log.debug("inside findAllState : "+data);
			//call to back end
			 var request = $http({
	                method: "GET",
	                url: "/api/getSchoolDataForSearch"
	            });
	         return(request.then( handleSuccess, handleError ));            
	           
	      //  return city;
		};
	    
	    function getBoardsFromStateId(stateId){
			$log.debug("inside getBoardsFromStateId : "+stateId.Id);
	        var boards = ($filter('filter')(schoolBoardForState, {stateId: stateId.Id}));      
	        return boards;
	    };
	    
	    function getLangFromStateId(stateId){
			$log.debug("inside getLangFromStateId : "+stateId.Id);
	        var items = ($filter('filter')(stateLanguage, {stateId: stateId.Id}));      
	        return items;
	    };
	    
	    function handleSuccess( response ) {
	    	$log.debug("get success resp ============= "+response.data);
            return(response.data );
        }
	    
	    function handleError( response ) {
	    	$log.error("error in fetching data in HomeService .......")
            if (
                 !angular.isObject( response.data ) ||
                    ! response.data.message
                ){
                return( $q.reject( "An unknown error occurred." ));
            }
            // Otherwise, use expected error message.
            return( $q.reject( response.data.message ) );

        }
	}
	
	function userPOJOClass(){
		//Neo4j Node Name -- User
		this.basicDetails={
		        userName:"",
		        regID:"",
		        salutation:"",
		        firstName:"",
		        middleName:"",
		        lastName:"",
		        userType:'',//number
		        DOB:'',//number timestamp
		        contactUserId:"", //username
		        casteId:'', //number
		        birthPlace_country:'',
		        birthPlace_state:'',
		        birthPlace_city:'',
		        birthPlace_otherCity:'',
		        visaDetails:"",
		        isSMSEnabled:false,
		        isEmailEnabled:false,
		        isFromReservedCategory:false,
		        passportNumber:"",
		        isFromReservedCategory:false,
		        isPhysicallyHandicapped:false,
		        sex:"",
		        softDelete:false,
		        languages_others:"",
		        profileImagePath:"",
		        isEconomicallyBackward:false,
		        languages_motherTongue:"",
		        uid:"",
		        religionId:'', //number
		        panNum:"",
		        isTrialStartDt:'',
		        isTrialEndDt:'',
		        startDate:'',
		        endDate:'',
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id:'' //id generated by neo4j is number
		    }
			//Neo4j Node Name -- UserSecProfile
			this.userSecProfile = {
				username : "",
				resetPasswordCodeUntil:'',//number timestamp
				resetPasswordCode:"",
				accessList:"", //array of accessList strings
				hashPassword:"",
				hashLastPassword1:"",
				hashLastPassword2:"",
				hashLastPassword3:"",
				lastLoginDate:"",
				lastPwdChangeDate:"",
				failedAttempt : "",
				securityQues1:"",
				securityAns1:"",
				securityQues2:"",
				securityAns2:"",
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
			}
			// Neo4j Node Name -- Address
		    this.primaryAddress={
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        addrType : 'PRIMARY',
		        addrSeq : 0,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		    }
			// Neo4j Node Name -- Address
		    this.secondaryAddress={
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        addrType : 'SECONDARY',
		        addrSeq : 1,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		    }
			// Neo4j Node Name -- SocialNetwork
		    this.socialNetwork={
		        skypeId: '',
		        facebookId: '',
		        twitterUrl: '',
		        skypeUrl: '',
		        twitterId: '',
		        facebookScreenName: '',
		        facebookUrl: '',
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
		        _id: ''
		    }
			// Neo4j Node Name -- Contact
		    this.contact={
				 emailPrimary:'',
		    	 emailSecondary:'',
		    	 phonePrimary:'',
		    	 phoneSecondary:'',
				 createdBy:"", //username
				 createdAt:(new Date()).getTime(),
				 updatedBy:"", //username
				 updatedAt:"",
		    	_id:''
		    }
			// Neo4j Node Name -- ImageData
			this.imageData = {
				imagePath : '',
				createdBy:"", //username'
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id : ''
				};
		}
	
	/** POJO CLASS for School **/
	function schoolClass() {
		this.basicDetails = {
				orgName:'',
				orgType:'',
				orgShortName : "",
				schoolId : "",
				description : "",
				orgHeadUserName : "",
				schoolBoard : "",
				schoolMedium : "",
				softDelete : false,
				orgUrl : "",
				smsGateway:"",
				establishDate:"",
		        startOrgSeq:1,
		        nextOrgSeq:1,
		        orgRegID:0,
		        orgRegNum:'',
		        purchaseSts:'',
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
		        updatedBy:"", //username
		        updatedAt:"",
				_id : ''
		};
		this.imageData = {
				imagePath : '',
				softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		};
		this.primaryAddress = {
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        geoLocation:"",
		        lat:"",
		        lan:"",
		        addrType : 'PRIMARY',
		        addrSeq : 0,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		};
		this.secondaryAddress = {
				street1: '',
		        street2: '',
		        city: '',
		        district: '',
		        state: '',
		        country: '',
		        pincode: "",
		        geoLocation:"",
		        lat:"",
		        lan:"",
		        addrType : 'SECONDARY',
		        addrSeq : 1,
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
		};
		this.contact = {
				emailPrimary : '',
				emailSecondary : '',
				phonePrimary : '',
				phoneSecondary : '',
				softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
		        updatedBy:"", //username
		        updatedAt:"",
				_id : ''
		};
	    this.socialNetwork={
		        skypeId: '',
		        facebookId: '',
		        twitterUrl: '',
		        skypeUrl: '',
		        twitterId: '',
		        facebookScreenName: '',
		        facebookUrl: '',
		        softDelete : false,
		        createdBy:"", //username
				createdAt:(new Date()).getTime(),
		        updatedBy:"", //username
		        updatedAt:"",
		        _id: ''
	    };
	    this.schoolLongDesc = {
	    		paragraph :"",
	    		bullets:[
	    		         "",
	    		         ""
	    		       ],
	    		softDelete : false,
	   			createdBy:"", //username
	   			createdAt:(new Date()).getTime(),
	   			updatedBy:"", //username
	   			updatedAt:"",
	   			_id: ''
	    },
	    this.schooleStablishedBy = {
	    		name:"",
	    		url:"",
	    		description:"",
	    		self:true,
	    		softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
	    },
	    this.schoolFeeRange = {
	    		min:0,
	    		max:0,
	    		category:"",
	    		softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
	    },
	    this.awards = {
	    		type :"", //awards OR achivements,  
	    		name:"",
	    		decription:"",
	    		date:0,
	    		softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
	    },
	    this.activities = {
	    		name:"",
	    		category:"",
	    		descriptions:"",
	    		keyPoints:["a",	"b"],
	    		softDelete : false,
				createdBy:"", //username
				createdAt:(new Date()).getTime(),
				updatedBy:"", //username
				updatedAt:"",
				_id: ''
	    	}
	    }
	
	              var stateLanguage = [
	        	                  {"Id":1, "lang":"Hindi", "stateId": 1},
	        	                  {"Id":2, "lang":"English", "stateId": 1},
	        	                  {"Id":3, "lang":"Hindi", "stateId": 2},
	        	                  {"Id":4, "lang":"English", "stateId": 2},
	        	                  {"Id":5, "lang":"Marathi", "stateId": 2},
	        	                  {"Id":6, "lang":"Hindi", "stateId": 4},
	        	                  {"Id":7, "lang":"English", "stateId": 4},
	        	                  {"Id":8, "lang":"Hindi", "stateId": 3},
	        	                  {"Id":9, "lang":"English", "stateId": 3}
	        	              ];
	              
	var schoolBoardForState = [
	                       {"id":1, "board":"UP" ,"name":"","stateId":1},
	                       {"id":2, "board":"CBSE","name":"Central Board of Secondary Education" ,"stateId":1},
	                       {"id":3, "board":"ICSE","name":"Indian Certificate of Secondary Education" ,"stateId":1},
	                       {"id":4, "board":"MB","name":"Maharashtra State Board of Secondary and Higher Secondary Education" ,"stateId":2},
	                       {"id":5, "board":"CBSE","name":"Central Board of Secondary Education" ,"stateId":2},
	                       {"id":6, "board":"CBSE","name":"Central Board of Secondary Education" ,"stateId":4},
	                       {"id":7, "board":"UK","name":"Uttarakhand Board of School Education" ,"stateId":4},
	                       {"id":8, "board":"ICSE","name":"Indian Certificate of Secondary Education" ,"stateId":4},
	                       {"id":9, "board":"ICSE","name":"Indian Certificate of Secondary Education" ,"stateId":3},
	                       {"id":10, "board":"CBSE","name":"Central Board of Secondary Education" ,"stateId":3}
	                       ];              
	
	var searchData = [
	                  {"id":1,"name":"GREEN LAND PUBLIC SCHOOL","icon":"avatar:svg-"},
	                  {"id":2,"name":"AMAR JYOTI SCHOOL","icon":"avatar:svg-"},
	                  {"id":3,"name":"ST. Johns Academy","icon":"avatar:svg-"},
	                  {"id":4,"name":"UNIVERSAL PUBLIC SCHOOL","icon":"avatar:svg-"},
	                  {"id":5,"name":"PROF N.G RANGA MEMORIAL ANDHRA ASSOSIATION SCHOOL","icon":"avatar:svg-"},
	                  {"id":6,"name":"ANGEIS PUBLIS SR. SEC. SCHOOL","icon":"avatar:svg-"},
	                  {"id":7,"name":"Guru Harkrishan Public School","icon":"avatar:svg-"},
	                  {"id":8,"name":"NEW OXFORD PUBLIC SCHOOL","icon":"avatar:svg-"},
	                  {"id":9,"name":"FLORENCE PUBLIC SCHOOL","icon":"avatar:svg-"},
	                  {"id":10,"name":"GYAN SAROVER BAL VIDYALAYA GANWARA","icon":"avatar:svg-"}
	                  ];
	


	
})();